# This project utilizes a database with multiple tables including product sales and customer data

# How many orders were placed in January?
SELECT COUNT(*) AS no_of_sales
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 AND orderid <> 'Order ID';

# How many of those orders were for an iPhone?
SELECT COUNT(*) AS no_of_sales
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 AND orderid <> 'Order ID' AND product = 'iPhone';

# Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT customers.acctnum
FROM BIT_DB.customers
JOIN BIT_DB.FebSales
ON customers.order_id = febsales.orderID
WHERE length(orderid) = 6 AND orderid <> 'Order ID';

# Which product was the cheapest one sold in January, and what was the price?
SELECT product, price
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 AND orderid <> 'Order ID'
ORDER BY price
LIMIT 1;

# What is the total revenue for each product sold in January?
SELECT product, ROUND(SUM(price*quantity), 2) AS revenue
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 AND orderid <> 'Order ID'
GROUP BY product;

# Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, SUM(quantity) AS number_sold, SUM(price*quantity) AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101' AND LENGTH(orderid) = 6 AND orderid <> 'Order ID'
GROUP BY product;

# How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(customers.acctnum) AS customers, AVG(febsales.price*febsales.Quantity) AS avg_spent
FROM BIT_DB.customers
JOIN BIT_DB.FebSales
ON febsales.orderID = customers.order_id
WHERE febsales.Quantity > 2 AND LENGTH(orderid) = 6 AND orderid <> 'Order ID';

# List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%' AND LENGTH(orderid) = 6 AND orderid <> 'Order ID'
GROUP BY product;

# Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT location, COUNT(*) AS number_of_orders
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%' AND LENGTH(orderid) = 6 AND orderid <> 'Order ID'
GROUP BY location
HAVING COUNT(*) >= 3;

# How many of each type of headphone was sold in February?
SELECT product, SUM(quantity) AS quantity
FROM BIT_DB.FebSales
WHERE product LIKE '%Headphones%'
GROUP BY product;

# What was the average amount spent per account in February?
SELECT SUM(febsales.price*febsales.Quantity) / COUNT(customers.acctnum) AS avg_spent_per_acc
FROM BIT_DB.FebSales
JOIN BIT_DB.customers
ON customers.order_id = febsales.orderID
WHERE LENGTH(orderid) = 6 AND orderid <> 'Order ID';

# What was the average quantity of products purchased per account in February? 
SELECT SUM(febsales.Quantity) / COUNT(customers.acctnum) AS avg_quantity_per_acc
FROM BIT_DB.FebSales
JOIN BIT_DB.customers
ON customers.order_id = febsales.orderID
WHERE LENGTH(orderid) = 6 AND orderid <> 'Order ID';

# Which product brought in the most revenue in January and how much revenue did it bring in total? 
SELECT product, SUM(price*quantity) AS revenue
FROM BIT_DB.JanSales
WHERE LENGTH(orderid) = 6 AND orderid <> 'Order ID'
GROUP BY product
ORDER BY revenue DESC
LIMIT 1;
