UPDATE airportdata SET elevation_ft = NULL WHERE elevation_ft = '';
UPDATE airportdata SET municipality = NULL WHERE municipality = '';

SELECT type, COUNT(ident) AS airports
FROM airportdata
GROUP BY type
ORDER BY airports DESC;

SELECT ident, name, elevation_ft, continent, iso_country, iso_region, municipality
FROM airportdata
WHERE type <> 'closed'
ORDER BY elevation_ft DESC
LIMIT 1;

SELECT ident, name, elevation_ft, continent, iso_country, iso_region, municipality
FROM airportdata
WHERE elevation_ft IS NOT NULL AND type <> 'closed'
ORDER BY elevation_ft
LIMIT 1;

SELECT ident, name, continent, iso_country, iso_region, municipality
FROM airportdata
WHERE type <> 'closed'
ORDER BY latitude_deg DESC
LIMIT 1;

SELECT ident, name, continent, iso_country, iso_region, municipality
FROM airportdata
WHERE type <> 'closed'
ORDER BY latitude_deg
LIMIT 1;

SELECT CASE
    WHEN continent = 'NA' THEN 'North America'
    WHEN continent = 'SA' THEN 'South America'
    WHEN continent = 'EU' THEN 'Europe'
    WHEN continent = 'AS' THEN 'Asia'
    WHEN continent = 'AF' THEN 'Africa'
    WHEN continent = 'OC' THEN 'Oceania'
    ELSE 'Antarctica'
END AS continent, COUNT(ident) AS airports
FROM airportdata
WHERE type <> 'closed'
GROUP BY continent
ORDER BY airports DESC;

SELECT ident, name, municipality, type, elevation_ft, iso_region
FROM airportdata
WHERE type = 'large_airport' AND iso_region = 'US-TX'
ORDER BY elevation_ft DESC;

SELECT ident, name, municipality, type, iso_region
FROM airportdata
WHERE type = 'heliport' AND iso_region = 'US-NC';

SELECT ident, name, municipality, iso_region, type
FROM airportdata
WHERE iso_region = 'US-HI' AND type <> 'closed'
ORDER BY latitude_deg DESC
LIMIT 1;

SELECT ident, name, municipality, iso_region, iso_country, type
FROM airportdata
WHERE iso_country = 'AU' AND type <> 'closed'
ORDER BY latitude_deg
LIMIT 1;

SELECT type, ident, name, MAX(elevation_ft) AS elevation, continent, iso_country, iso_region, municipality
FROM airportdata
GROUP BY type;

SELECT iso_country, ident, name, type, MAX(elevation_ft) AS elevation, municipality, iso_region, continent
FROM airportdata
WHERE type <> 'closed'
GROUP BY iso_country;

SELECT CASE
    WHEN type = 'closed' THEN 'closed'
    ELSE 'open'
END AS status, COUNT(ident) AS airports
FROM airportdata
GROUP BY status
ORDER BY airports DESC;